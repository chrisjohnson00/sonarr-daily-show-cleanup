name: 'PR Standards Check'
on:
  pull_request:
    types:
      - 'opened'
      - 'edited'
      - 'reopened'
      - 'synchronize'

jobs:
  check-pr-title:
    name: 'PR Title'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v4'
      - name: Install Dependencies
        # yamllint disable rule:line-length
        run: |
          npm install @commitlint/config-conventional
          echo "module.exports = {extends: ['@commitlint/config-conventional'], rules: { 'subject-case': [0,'always',['sentence-case']],'header-max-length': [2, 'always', 120], 'body-max-line-length': [0, 'always', 120] }};" > commitlint.config.js
        # yamllint enable rule:line-length
      - name: Lint the PR Title
        run: |
          echo "${PR_TITLE}" | npx --yes commitlint
        env:
          PR_TITLE: '${{ github.event.pull_request.title }}'
  check-pr-commits:
    name: 'PR Commit Messages'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0
      - name: 'Configure commit lint'
        run: |
          echo "module.exports = {extends: ['@commitlint/config-conventional'], rules: { 'subject-case': [0, 'always', ['sentence-case']], 'header-max-length': [2, 'always', 120], 'body-max-line-length': [0, 'always', 120] }};" > commitlint.config.js
      - uses: 'wagoid/commitlint-github-action@v5.4.5'
  apply-labels:
    name: PR Labels
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Apply PR Labels
        uses: chrisjohnson00/conventional-release-labels@update_github_actions_node_version
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          type_labels: '{"feat": "enhancement", "fix": "bug", "docs": "documentation"}'
          ignored_types: '[]'
      - name: Check PR Body for Breaking Change
        id: check-breaking
        run: |
          set +e  # Disable exit-on-error temporarily
          echo "${PR_BODY}" | grep -i "BREAKING CHANGE"
          GREP_EXIT_CODE=$? # Capture the exit code
          set -e  # Enable exit-on-error again
          echo "grep_exit_code=${GREP_EXIT_CODE}" >>"$GITHUB_OUTPUT"
        env:
          PR_BODY: '${{ github.event.pull_request.body }}'
      - name: Add Breaking Label
        if: steps.check-breaking.outputs.grep_exit_code == 0
        uses: actions/github-script@v7.0.1
        with:
          # context.issue.number will return either an issue number or a PR number:
          # https://github.com/actions/toolkit/blob/92695f58daf7b460a9ae2a4682d8e65a5dea7bc8/packages/github/src/context.ts#L60
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['breaking']
            });
